// <auto-generated />
using System;
using Imobiliaria.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Imobiliaria.Api.Migrations
{
    [DbContext(typeof(ImobiliariaContext))]
    partial class ImobiliariaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Imobiliaria.Api.Models.ContratoAluguel", b =>
                {
                    b.Property<int>("ContratoAluguelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContratoAluguelId"), 1L, 1);

                    b.Property<int>("CorretorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("ImovelId")
                        .HasColumnType("int");

                    b.Property<int>("InquilinoId")
                        .HasColumnType("int");

                    b.Property<int>("ProprietarioId")
                        .HasColumnType("int");

                    b.HasKey("ContratoAluguelId");

                    b.HasIndex("CorretorId");

                    b.HasIndex("ImovelId");

                    b.HasIndex("InquilinoId");

                    b.HasIndex("ProprietarioId");

                    b.ToTable("ContratoAlugueis");
                });

            modelBuilder.Entity("Imobiliaria.Api.Models.Corretor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Corretores");
                });

            modelBuilder.Entity("Imobiliaria.Api.Models.Imovel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Alugado")
                        .HasColumnType("bit");

                    b.Property<int?>("CorretorId")
                        .HasColumnType("int");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProprietarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CorretorId");

                    b.HasIndex("ProprietarioId");

                    b.ToTable("Imoveis");
                });

            modelBuilder.Entity("Imobiliaria.Api.Models.Inquilino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Inquilinos");
                });

            modelBuilder.Entity("Imobiliaria.Api.Models.Proprietario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Proprietarios");
                });

            modelBuilder.Entity("Imobiliaria.Api.Models.ContratoAluguel", b =>
                {
                    b.HasOne("Imobiliaria.Api.Models.Corretor", "Corretor")
                        .WithMany()
                        .HasForeignKey("CorretorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imobiliaria.Api.Models.Imovel", "Imovel")
                        .WithMany("ContratosAluguel")
                        .HasForeignKey("ImovelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imobiliaria.Api.Models.Inquilino", "Inquilino")
                        .WithMany("ContratosAluguel")
                        .HasForeignKey("InquilinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imobiliaria.Api.Models.Proprietario", "Proprietario")
                        .WithMany()
                        .HasForeignKey("ProprietarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Corretor");

                    b.Navigation("Imovel");

                    b.Navigation("Inquilino");

                    b.Navigation("Proprietario");
                });

            modelBuilder.Entity("Imobiliaria.Api.Models.Imovel", b =>
                {
                    b.HasOne("Imobiliaria.Api.Models.Corretor", null)
                        .WithMany("Imoveis")
                        .HasForeignKey("CorretorId");

                    b.HasOne("Imobiliaria.Api.Models.Proprietario", null)
                        .WithMany("Imoveis")
                        .HasForeignKey("ProprietarioId");
                });

            modelBuilder.Entity("Imobiliaria.Api.Models.Corretor", b =>
                {
                    b.Navigation("Imoveis");
                });

            modelBuilder.Entity("Imobiliaria.Api.Models.Imovel", b =>
                {
                    b.Navigation("ContratosAluguel");
                });

            modelBuilder.Entity("Imobiliaria.Api.Models.Inquilino", b =>
                {
                    b.Navigation("ContratosAluguel");
                });

            modelBuilder.Entity("Imobiliaria.Api.Models.Proprietario", b =>
                {
                    b.Navigation("Imoveis");
                });
#pragma warning restore 612, 618
        }
    }
}
